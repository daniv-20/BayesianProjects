# return(data.frame(estimate=summary(m)$coefficients["var","Estimate"],
#                   n_lower=summary(m)$coefficients["var","Estimate"] - qnorm(0.975)*summary(m)$coefficients["var","Naive S.E."]/sqrt(nrow(df_sub)),
#                   n_upper=summary(m)$coefficients["var","Estimate"] + qnorm(0.975)*summary(m)$coefficients["var","Naive S.E."]/sqrt(nrow(df_sub)),
#                   r_lower=summary(m)$coefficients["var","Estimate"] - qnorm(0.975)*summary(m)$coefficients["var","Robust S.E."]/sqrt(nrow(df_sub)),
#                   r_upper=summary(m)$coefficients["var","Estimate"] + qnorm(0.975)*summary(m)$coefficients["var","Robust S.E."]/sqrt(nrow(df_sub))
#        ))
})
sink(NULL)
# recombine
df_res <- do.call("rbind", df_res_l)
return(df_res)
}
step_size <- 20
max_step <- 600
outname <- "kcal"
varname <- "agegrp"
num_it <- 10
## we can cap the sample size at 500 - david
run_sciq = function(step_size, max_step,
outname, varname){
steps <- seq(step_size, max_step, step_size)
s <- Sys.time()
sims_by_iter_alcoh <- lapply(steps,
function(sample_size){return(run_sim_eqvar(df, sample_size, outname, varname, iter=num_it))})
#save(sims_by_iter_alcoh, file = "sims_by_iter_alcoh_iter_1000_kcal_agegrp.rdata")
sink(NULL)
print(Sys.time() - s)
print("Past iterations")
df_temp <- df
df_temp$var <- df[,varname]
df_temp$outcome <- df[,outname]
#mu_pop <- gee(outcome ~ var, data=df_temp, corstr="independence", id=id)$coefficients[[2]]
mu_pop = diff(t.test(df_temp$var, df_temp$outcome, var.equal = FALSE)$estimate)
print (paste0("Population mean is ", mu_pop))
sims_summary_alcoh <- lapply(sims_by_iter_alcoh, function(df_sims){
# calculate CI
# flag - CI contains true mean
# calculate bias vs. population mean
#print(mu_pop)
#print(df_sims$estimate)
#print(mu_pop - diff(df_sims$estimate))
return(data.frame(CI_contains_mean = mean(mu_pop <= df_sims$ci_upper & mu_pop >= df_sims$ci_lower),
bias = mean(abs(mu_pop - df_sims$estimate))))
})
tab_2 <- cbind(data.frame(SampleSize = steps,
bind_rows(sims_summary_alcoh)))
names(tab_2) <- c("Sample Size", "Coverage", "Mean Abs. Bias")
return(tab_2)}
tab_2_kcal_age_eqvar = run_sciq(step_size, max_step,
outname, varname)
gt(tab_2_kcal_age_eqvar, caption = "Coverage and Bias, Kcal vs Agegrp, equal variance")
step_size <- 20
max_step <- 600
outname <- "kcal"
varname <- "agegrp"
num_it <- 1000
## we can cap the sample size at 500 - david
run_sciq = function(step_size, max_step,
outname, varname){
steps <- seq(step_size, max_step, step_size)
s <- Sys.time()
sims_by_iter_alcoh <- lapply(steps,
function(sample_size){return(run_sim_eqvar(df, sample_size, outname, varname, iter=num_it))})
#save(sims_by_iter_alcoh, file = "sims_by_iter_alcoh_iter_1000_kcal_agegrp.rdata")
sink(NULL)
print(Sys.time() - s)
print("Past iterations")
df_temp <- df
df_temp$var <- df[,varname]
df_temp$outcome <- df[,outname]
#mu_pop <- gee(outcome ~ var, data=df_temp, corstr="independence", id=id)$coefficients[[2]]
mu_pop = diff(t.test(df_temp$var, df_temp$outcome, var.equal = FALSE)$estimate)
print (paste0("Population mean is ", mu_pop))
sims_summary_alcoh <- lapply(sims_by_iter_alcoh, function(df_sims){
# calculate CI
# flag - CI contains true mean
# calculate bias vs. population mean
#print(mu_pop)
#print(df_sims$estimate)
#print(mu_pop - diff(df_sims$estimate))
return(data.frame(CI_contains_mean = mean(mu_pop <= df_sims$ci_upper & mu_pop >= df_sims$ci_lower),
bias = mean(abs(mu_pop - df_sims$estimate))))
})
tab_2 <- cbind(data.frame(SampleSize = steps,
bind_rows(sims_summary_alcoh)))
names(tab_2) <- c("Sample Size", "Coverage", "Mean Abs. Bias")
return(tab_2)}
tab_2_kcal_age_eqvar = run_sciq(step_size, max_step,
outname, varname)
gt(tab_2_kcal_age_eqvar, caption = "Coverage and Bias, Kcal vs Agegrp, equal variance")
run_sim_eqvar <- function(df, sample_size, outname, varname, iter=1000){
# handle missingness - drop missings
df <- df %>% na.omit
df$var <- df[,varname]
df$outcome <- df[,outname]
# split dataset
df_sub_l <- lapply(1:iter, function(i){
df_out <- df[sample(1:nrow(df), sample_size),]
while(length(unique(df_out$var))==1){
df_out <- df[sample(1:nrow(df), sample_size),]
}
return(df_out)
})
# summarize data
sink(tempfile())
df_res_l <- lapply(df_sub_l, function(df_sub){
### USE Welche's t-test - david
test = t.test(df_sub$outcome, df_sub$var, var.equal = TRUE)
df_return = data.frame(estimate = abs(diff(test$estimate)), ci_lower = test$conf.int[1], ci_upper = test$conf.int[2], std.err = test$stderr)
return(df_return)
#m <- suppressMessages(suppressWarnings(gee(outcome ~ var, data=df_sub, corstr="independence", id=id)))
# return(data.frame(estimate=summary(m)$coefficients["var","Estimate"],
#                   n_lower=summary(m)$coefficients["var","Estimate"] - qnorm(0.975)*summary(m)$coefficients["var","Naive S.E."]/sqrt(nrow(df_sub)),
#                   n_upper=summary(m)$coefficients["var","Estimate"] + qnorm(0.975)*summary(m)$coefficients["var","Naive S.E."]/sqrt(nrow(df_sub)),
#                   r_lower=summary(m)$coefficients["var","Estimate"] - qnorm(0.975)*summary(m)$coefficients["var","Robust S.E."]/sqrt(nrow(df_sub)),
#                   r_upper=summary(m)$coefficients["var","Estimate"] + qnorm(0.975)*summary(m)$coefficients["var","Robust S.E."]/sqrt(nrow(df_sub))
#        ))
})
sink(NULL)
# recombine
df_res <- do.call("rbind", df_res_l)
return(df_res)
}
step_size <- 20
max_step <- 600
outname <- "kcal"
varname <- "agegrp"
num_it <- 1000
## we can cap the sample size at 500 - david
run_sciq = function(step_size, max_step,
outname, varname){
steps <- seq(step_size, max_step, step_size)
s <- Sys.time()
sims_by_iter_alcoh <- lapply(steps,
function(sample_size){return(run_sim_eqvar(df, sample_size, outname, varname, iter=num_it))})
#save(sims_by_iter_alcoh, file = "sims_by_iter_alcoh_iter_1000_kcal_agegrp.rdata")
sink(NULL)
print(Sys.time() - s)
print("Past iterations")
df_temp <- df
df_temp$var <- df[,varname]
df_temp$outcome <- df[,outname]
#mu_pop <- gee(outcome ~ var, data=df_temp, corstr="independence", id=id)$coefficients[[2]]
mu_pop = diff(t.test(df_temp$var, df_temp$outcome, var.equal = FALSE)$estimate)
print (paste0("Population mean is ", mu_pop))
sims_summary_alcoh <- lapply(sims_by_iter_alcoh, function(df_sims){
# calculate CI
# flag - CI contains true mean
# calculate bias vs. population mean
#print(mu_pop)
#print(df_sims$estimate)
#print(mu_pop - diff(df_sims$estimate))
return(data.frame(CI_contains_mean = mean(mu_pop <= df_sims$ci_upper & mu_pop >= df_sims$ci_lower),
bias = mean(abs(mu_pop - df_sims$estimate))))
})
tab_2 <- cbind(data.frame(SampleSize = steps,
bind_rows(sims_summary_alcoh)))
names(tab_2) <- c("Sample Size", "Coverage", "Mean Abs. Bias")
return(tab_2)}
tab_2_kcal_age_eqvar = run_sciq(step_size, max_step,
outname, varname)
gt(tab_2_kcal_age_eqvar, caption = "Coverage and Bias, Kcal vs Agegrp, equal variance")
step_size <- 20
max_step <- 600
outname <- "kcal"
varname <- "female"
num_it <- 1000
tab_2_kcal_gender_eqvar = run_sciq(step_size, max_step,
outname, varname)
gt(tab_2_kcal_gender_eqvar, caption = "Coverage and Bias, Kcal vs Gender, equal variance")
step_size <- 20
max_step <- 600
outname <- "alcoh"
varname <- "agegrp"
num_it <- 1000
tab_2_kcal_gender_eqvar = run_sciq(step_size, max_step,
outname, varname)
gt(tab_2_kcal_gender_eqvar, caption = "Coverage and Bias, Alcohol vs Age, equal variance")
step_size <- 20
max_step <- 600
outname <- "alcoh"
varname <- "agegrp"
num_it <- 1000
tab_2_alcoh_agegrp_eqvar = run_sciq(step_size, max_step,
outname, varname)
gt(tab_2_alcoh_agegrp_eqvar, caption = "Coverage and Bias, Alcohol vs Age, equal variance")
step_size <- 20
max_step <- 600
outname <- "alcoh"
varname <- "agegrp"
num_it <- 1000
tab_2_alcoh_agegrp_eqvar = run_sciq(step_size, max_step,
outname, varname)
gt(tab_2_alcoh_agegrp_eqvar, caption = "Coverage and Bias, Alcohol vs Age, equal variance")
step_size <- 20
max_step <- 600
outname <- "sysbp"
varname <- "agegrp"
num_it <- 1000
tab_2_sysbp_agegrp_eqvar = run_sciq(step_size, max_step,
outname, varname)
gt(tab_2_sysbp_agegrp_eqvar, caption = "Coverage and Bias, Systolic BP vs Age, equal variance")
step_size <- 20
max_step <- 600
outname <- "sysbp"
varname <- "gender"
num_it <- 1000
tab_2_sysbp_gender_eqvar = run_sciq(step_size, max_step,
outname, varname)
tab_2_kcal_age
min.ss = tab_2_kcal_age[min(tab_2_kcal_age$Coverage >= 0.95)]
min.ss = tab_2_kcal_age[min(tab_2_kcal_age$Coverage >= 0.95)]; min.ss
min.ss = tab_2_kcal_age[min(tab_2_kcal_age$Coverage >= 0.95),]; min.ss
min.ss = tab_2_kcal_age[tab_2_kcal_age$Coverage >= 0.95,]; min.ss
min.ss = tab_2_kcal_age[tab_2_kcal_age$Coverage >= 0.95,];
min.ss = tab_2_kcal_age[tab_2_kcal_age$Coverage >= 0.95,]; min.ss[1,]
min.ss = tab_2_kcal_age[tab_2_kcal_age$Coverage >= 0.95,][1,];min.ss
anss = min.ss
min.ss = tab_2_kcal_fem[tab_2_kcal_fem$Coverage >= 0.95,][1,];min.ss
anss = rbind(anss, min.ss)
anss
min.ss = tab_2_alcoh_age[tab_2_alcoh_age$Coverage >= 0.95,][1,];min.ss
anss = rbind(anss, min.ss)
anss
min.ss = tab_2_alcoh_smk[tab_2_alcoh_smk$Coverage >= 0.95,][1,];min.ss
anss = rbind(anss, min.ss)
anss
min.ss = tab_2_sbp_age[tab_2_sbp_age$Coverage >= 0.95,][1,];min.ss
anss = rbind(anss, min.ss)
anss
min.ss = tab_2_sbp_gender[tab_2_sbp_gender$Coverage >= 0.95,][1,];min.ss
anss = rbind(anss, min.ss)
anss
tab3 = data.frame(Outcome = c("Kcal", "Kcal", "Alcoh", "Alcoh", "Sysbp", "Sysbp"), SciQ = c(rep(c("i", "ii"), 3)))
tab3 = cbind(tab3, anss)
tab3
df
reln1n0 = c(length(df$kcal[df$agegrp == 1])/length(df$kcal[df$agegrp == 0]), length(df$kcal[df$female == 1])/length(df$kcal[df$female == 0]), length(df$alcoh[df$agegrp == 1])/length(df$alcoh[df$agegrp == 0]), length(df$alcoh[df$cursmk == 1])/length(df$alcoh[df$cursmk == 0]),
length(df$sysbp[df$agegrp == 1])/length(df$sysbp[df$agegrp == 0]),
length(df$sysbp[df$female == 1])/length(df$sysbp[df$female == 0])); reln1n0
rels1s0 = c(sd(df$kcal[df$agegrp == 1])/sd(df$kcal[df$agegrp == 0]), sd(df$kcal[df$female == 1])/sd(df$kcal[df$female == 0]), sd(df$alcoh[df$agegrp == 1])/sd(df$alcoh[df$agegrp == 0]), sd(df$alcoh[df$cursmk == 1])/sd(df$alcoh[df$cursmk == 0]),
sd(df$sysbp[df$agegrp == 1])/sd(df$sysbp[df$agegrp == 0]),
sd(df$sysbp[df$female == 1])/sd(df$sysbp[df$female == 0])); reln1n0
tab3$n1n0 = reln1n0
tab3$s1s0 = rels1s0
tab3
rels1s0 = c(sd(df$kcal[df$agegrp == 1])/sd(df$kcal[df$agegrp == 0]), sd(df$kcal[df$female == 1])/sd(df$kcal[df$female == 0]), sd(df$alcoh[df$agegrp == 1])/sd(df$alcoh[df$agegrp == 0]), sd(df$alcoh[df$cursmk == 1])/sd(df$alcoh[df$cursmk == 0]),
sd(df$sysbp[df$agegrp == 1])/sd(df$sysbp[df$agegrp == 0]),
sd(df$sysbp[df$female == 1])/sd(df$sysbp[df$female == 0])); rels1s0
rels1s0 = c(sd(df$kcal[df$agegrp == 1], na.rm = TRUE)/sd(df$kcal[df$agegrp == 0], na.rm = TRUE), sd(df$kcal[df$female == 1])/sd(df$kcal[df$female == 0]), sd(df$alcoh[df$agegrp == 1])/sd(df$alcoh[df$agegrp == 0]), sd(df$alcoh[df$cursmk == 1])/sd(df$alcoh[df$cursmk == 0]),
sd(df$sysbp[df$agegrp == 1])/sd(df$sysbp[df$agegrp == 0]),
sd(df$sysbp[df$female == 1])/sd(df$sysbp[df$female == 0])); rels1s0
rels1s0 = c(sd(df$kcal[df$agegrp == 1], na.rm = TRUE)/sd(df$kcal[df$agegrp == 0], na.rm = TRUE), sd(df$kcal[df$female == 1], na.rm = TRUE)/sd(df$kcal[df$female == 0], na.rm = TRUE), sd(df$alcoh[df$agegrp == 1], na.rm = TRUE)/sd(df$alcoh[df$agegrp == 0], na.rm = TRUE), sd(df$alcoh[df$cursmk == 1], na.rm = TRUE)/sd(df$alcoh[df$cursmk == 0], na.rm = TRUE),
sd(df$sysbp[df$agegrp == 1])/sd(df$sysbp[df$agegrp == 0], na.rm = TRUE),
sd(df$sysbp[df$female == 1])/sd(df$sysbp[df$female == 0], na.rm = TRUE)); rels1s0
rels1s0 = c(sd(df$kcal[df$agegrp == 1], na.rm = TRUE)/sd(df$kcal[df$agegrp == 0], na.rm = TRUE), sd(df$kcal[df$female == 1], na.rm = TRUE)/sd(df$kcal[df$female == 0], na.rm = TRUE), sd(df$alcoh[df$agegrp == 1], na.rm = TRUE)/sd(df$alcoh[df$agegrp == 0], na.rm = TRUE), sd(df$alcoh[df$cursmk == 1], na.rm = TRUE)/sd(df$alcoh[df$cursmk == 0], na.rm = TRUE),
sd(df$sysbp[df$agegrp == 1], na.rm = TRUE)/sd(df$sysbp[df$agegrp == 0], na.rm = TRUE),
sd(df$sysbp[df$female == 1], na.rm = TRUE)/sd(df$sysbp[df$female == 0], na.rm = TRUE)); rels1s0
tab3$n1n0 = reln1n0
tab3$s1s0 = rels1s0
tab3
names(tab3) <- c("Outcome", "Scientific Question", "Minimum Sample Size", "Nominal Coverage", "Mean Bias", "Relative N", "Relative Variance")
tab3 = data.frame(Outcome = c("Kcal", "Kcal", "Alcoh", "Alcoh", "Sysbp", "Sysbp"), SciQ = c(rep(c("i", "ii"), 3)))
tab3 = cbind(tab3, anss)
tab3
reln1n0 = c(length(df$kcal[df$agegrp == 1])/length(df$kcal[df$agegrp == 0]), length(df$kcal[df$female == 1])/length(df$kcal[df$female == 0]), length(df$alcoh[df$agegrp == 1])/length(df$alcoh[df$agegrp == 0]), length(df$alcoh[df$cursmk == 1])/length(df$alcoh[df$cursmk == 0]),
length(df$sysbp[df$agegrp == 1])/length(df$sysbp[df$agegrp == 0]),
length(df$sysbp[df$female == 1])/length(df$sysbp[df$female == 0])); reln1n0
rels1s0 = c(sd(df$kcal[df$agegrp == 1], na.rm = TRUE)/sd(df$kcal[df$agegrp == 0], na.rm = TRUE), sd(df$kcal[df$female == 1], na.rm = TRUE)/sd(df$kcal[df$female == 0], na.rm = TRUE), sd(df$alcoh[df$agegrp == 1], na.rm = TRUE)/sd(df$alcoh[df$agegrp == 0], na.rm = TRUE), sd(df$alcoh[df$cursmk == 1], na.rm = TRUE)/sd(df$alcoh[df$cursmk == 0], na.rm = TRUE),
sd(df$sysbp[df$agegrp == 1], na.rm = TRUE)/sd(df$sysbp[df$agegrp == 0], na.rm = TRUE),
sd(df$sysbp[df$female == 1], na.rm = TRUE)/sd(df$sysbp[df$female == 0], na.rm = TRUE)); rels1s0
tab3$n1n0 = reln1n0
tab3$s1s0 = rels1s0
tab3
names(tab3) <- c("Outcome", "Scientific Question", "Minimum Sample Size", "Nominal Coverage", "Mean Bias", "Relative N", "Relative Variance")
gt(tab3, caption = "Table 1: Approximate minimal sample sizes for valid inference")
step_size <- 20
max_step <- 600
outname <- "sysbp"
varname <- "female"
num_it <- 1000
tab_2_sysbp_gender_eqvar = run_sciq(step_size, max_step,
outname, varname)
gt(tab_2_sysbp_gender_eqvar, caption = "Coverage and Bias, Systolic BP vs Gender, equal variance")
step_size <- 20
max_step <- 600
outname <- "alcoh"
varname <- "agegrp"
num_it <- 1000
tab_2_alcoh_agegrp_eqvar = run_sciq(step_size, max_step,
outname, varname)
gt(tab_2_alcoh_agegrp_eqvar, caption = "Coverage and Bias, Alcohol vs Age, equal variance")
tab_2_alcoh_cursmk_eqvar = run_sciq(step_size, max_step,
outname, varname)
tab_2_alcoh_cursmk_eqvar = run_sciq(step_size, max_step,
outname, varname)
gt(tab_2_alcoh_cursmk_eqvar, caption = "Coverage and Bias, Alcohol vs Smoking, equal variance")
step_size <- 20
max_step <- 600
outname <- "sysbp"
varname <- "female"
num_it <- 1000
step_size <- 20
max_step <- 600
outname <- "kcal"
varname <- "female"
num_it <- 1000
tab_2_kcal_gender_eqvar = run_sciq(step_size, max_step,
outname, varname)
gt(tab_2_kcal_gender_eqvar, caption = "Coverage and Bias, Kcal vs Gender, equal variance")
min.ss.eq = tab_2_kcal_gender_eqvar[tab_2_kcal_gender_eqvar$Coverage >= 0.95,][1,]
anss.eq = rbind(anss.eq, min.sseq)
min.ss.eq = tab_2_kcal_age_eqver[tab_2_kcal_age_eqvar$Coverage >= 0.95,][1,]
step_size <- 20
max_step <- 600
outname <- "kcal"
varname <- "agegrp"
num_it <- 1000
## we can cap the sample size at 500 - david
run_sciq = function(step_size, max_step,
outname, varname){
steps <- seq(step_size, max_step, step_size)
s <- Sys.time()
sims_by_iter_alcoh <- lapply(steps,
function(sample_size){return(run_sim_eqvar(df, sample_size, outname, varname, iter=num_it))})
#save(sims_by_iter_alcoh, file = "sims_by_iter_alcoh_iter_1000_kcal_agegrp.rdata")
sink(NULL)
print(Sys.time() - s)
print("Past iterations")
df_temp <- df
df_temp$var <- df[,varname]
df_temp$outcome <- df[,outname]
#mu_pop <- gee(outcome ~ var, data=df_temp, corstr="independence", id=id)$coefficients[[2]]
mu_pop = diff(t.test(df_temp$var, df_temp$outcome, var.equal = FALSE)$estimate)
print (paste0("Population mean is ", mu_pop))
sims_summary_alcoh <- lapply(sims_by_iter_alcoh, function(df_sims){
# calculate CI
# flag - CI contains true mean
# calculate bias vs. population mean
#print(mu_pop)
#print(df_sims$estimate)
#print(mu_pop - diff(df_sims$estimate))
return(data.frame(CI_contains_mean = mean(mu_pop <= df_sims$ci_upper & mu_pop >= df_sims$ci_lower),
bias = mean(abs(mu_pop - df_sims$estimate))))
})
tab_2 <- cbind(data.frame(SampleSize = steps,
bind_rows(sims_summary_alcoh)))
names(tab_2) <- c("Sample Size", "Coverage", "Mean Abs. Bias")
return(tab_2)}
tab_2_kcal_age_eqvar = run_sciq(step_size, max_step,
outname, varname)
gt(tab_2_kcal_age_eqvar, caption = "Coverage and Bias, Kcal vs Agegrp, equal variance")
min.ss.eq = tab_2_kcal_age_eqver[tab_2_kcal_age_eqvar$Coverage >= 0.95,][1,]
gt(tab_2_kcal_age_eqvar, caption = "Coverage and Bias, Kcal vs Agegrp, equal variance")
min.ss.eq = tab_2_kcal_age_eqvar[tab_2_kcal_age_eqvar$Coverage >= 0.95,][1,]
anss.eq = min.ss.eq
min.ss.eq = tab_2_kcal_gender_eqvar[tab_2_kcal_gender_eqvar$Coverage >= 0.95,][1,]
anss.eq = rbind(anss.eq, min.sseq)
anss.eq = rbind(anss.eq, min.ss.eq)
anss.eq
min.ss.eq = tab_2_alcoh_agegrp_eqvar[tab_2_alcoh_agegrp_eqvar$Coverage >= 0.95,][1,]
anss.eq = rbind(anss.eq, min.ss/eq)
anss.eq = rbind(anss.eq, min.ss.eq)
min.ss.eq = tab_2_alcoh_cursmk_eqvar[tab_2_alcoh_cursmk_eqvar$Coverage >= 0.95,][1,]
anss.eq = rbind(anss.eq, min.ss.eq)
min.ss.eq = tab_2_sysbp_agegrp_eqvar[tab_2_sysbp_agegrp_eqvar$Coverage >= 0.95,][1,]
anss.eq = rbind(anss.eq, min.ss.eq)
min.ss.eq = tab_2_sysbp_gender_eqvar[tab_2_sysbp_gender_eqvar$Coverage >= 0.95,][1,]
anss.eq = rbind(anss.eq, min.ss.eq)
tab5 = data.frame(Outcome = c("Kcal", "Kcal", "Alcoh", "Alcoh", "Sysbp", "Sysbp"), SciQ = c(rep(c("i", "ii"), 3)))
tab5 = cbind(tab5, anss.eq)
tab5
tab5 = cbind(tab5, anss.eq)
tab5
tab5$n1n0 = reln1n0
tab5$s1s0 = rels1s0
tab5
names(tab5) <- c("Outcome", "Scientific Question", "Minimum Sample Size", "Nominal Coverage", "Mean Bias", "Relative N", "Relative Variance")
gt(tab5, caption = "Table 2: Approximate minimal sample sizes for valid inference (Equal Variance Assumed)")
tab5 = data.frame(Outcome = c("Kcal", "Kcal", "Alcoh", "Alcoh", "Sysbp", "Sysbp"), SciQ = c(rep(c("i", "ii"), 3)))
tab5 = cbind(tab5, anss.eq)
tab5
tab5$n1n0 = reln1n0
tab5$s1s0 = rels1s0
tab5
names(tab5) <- c("Outcome", "Scientific Question", "Minimum Sample Size", "Nominal Coverage", "Mean Bias", "Relative N", "Relative Variance")
gt(tab5, caption = "Table 2: Approximate minimal sample sizes for valid inference (Equal Variance Assumed)")
gt(tab3, caption = "Table 1: Approximate minimal sample sizes for valid inference")
gt(tab5, caption = "Table 2: Approximate minimal sample sizes for valid inference (Equal Variance Assumed)")
gt(tab3, caption = "Table 1: Approximate minimal sample sizes for valid inference")
tab3$`Relative N`[1]
round(tab3$'Relative N'[1], digits = 2)
min.ss = tab_2_kcal_age[tab_2_kcal_age$Coverage >= 0.95,][1,]
anss = min.ss
min.ss = tab_2_kcal_fem[tab_2_kcal_fem$Coverage >= 0.95,][1,]
anss = rbind(anss, min.ss)
min.ss = tab_2_alcoh_age[tab_2_alcoh_age$Coverage >= 0.95,][1,]
anss = rbind(anss, min.ss)
anss
min.ss = tab_2_alcoh_smk[tab_2_alcoh_smk$Coverage >= 0.95,][1,]
anss = rbind(anss, min.ss)
min.ss = tab_2_sbp_age[tab_2_sbp_age$Coverage >= 0.95,][1,]
anss = rbind(anss, min.ss)
min.ss = tab_2_sbp_gender[tab_2_sbp_gender$Coverage >= 0.95,][1,]
anss = rbind(anss, min.ss)
anss
tab3 = data.frame(Outcome = c("Kcal", "Kcal", "Alcoh", "Alcoh", "Sysbp", "Sysbp"), SciQ = c(rep(c("i", "ii"), 3)))
tab3 = cbind(tab3, anss)
tab3
reln1n0 = c(length(df$kcal[df$agegrp == 1])/length(df$kcal[df$agegrp == 0]), length(df$kcal[df$female == 1])/length(df$kcal[df$female == 0]), length(df$alcoh[df$agegrp == 1])/length(df$alcoh[df$agegrp == 0]), length(df$alcoh[df$cursmk == 1])/length(df$alcoh[df$cursmk == 0]),
length(df$sysbp[df$agegrp == 1])/length(df$sysbp[df$agegrp == 0]),
length(df$sysbp[df$female == 1])/length(df$sysbp[df$female == 0])); reln1n0
rels1s0 = c(sd(df$kcal[df$agegrp == 1], na.rm = TRUE)/sd(df$kcal[df$agegrp == 0], na.rm = TRUE), sd(df$kcal[df$female == 1], na.rm = TRUE)/sd(df$kcal[df$female == 0], na.rm = TRUE), sd(df$alcoh[df$agegrp == 1], na.rm = TRUE)/sd(df$alcoh[df$agegrp == 0], na.rm = TRUE), sd(df$alcoh[df$cursmk == 1], na.rm = TRUE)/sd(df$alcoh[df$cursmk == 0], na.rm = TRUE),
sd(df$sysbp[df$agegrp == 1], na.rm = TRUE)/sd(df$sysbp[df$agegrp == 0], na.rm = TRUE),
sd(df$sysbp[df$female == 1], na.rm = TRUE)/sd(df$sysbp[df$female == 0], na.rm = TRUE)); rels1s0
rels1s0 = c(var(df$kcal[df$agegrp == 1], na.rm = TRUE)/var(df$kcal[df$agegrp == 0], na.rm = TRUE), var(df$kcal[df$female == 1], na.rm = TRUE)/var(df$kcal[df$female == 0], na.rm = TRUE), var(df$alcoh[df$agegrp == 1], na.rm = TRUE)/var(df$alcoh[df$agegrp == 0], na.rm = TRUE), var(df$alcoh[df$cursmk == 1], na.rm = TRUE)/var(df$alcoh[df$cursmk == 0], na.rm = TRUE),
var(df$sysbp[df$agegrp == 1], na.rm = TRUE)/var(df$sysbp[df$agegrp == 0], na.rm = TRUE),
var(df$sysbp[df$female == 1], na.rm = TRUE)/var(df$sysbp[df$female == 0], na.rm = TRUE)); rels1s0
tab3$n1n0 = reln1n0
tab3$s1s0 = rels1s0
tab3
names(tab3) <- c("Outcome", "Scientific Question", "Minimum Sample Size", "Nominal Coverage", "Mean Bias", "Relative N", "Relative Variance")
gt(tab3, caption = "Table 1: Approximate minimal sample sizes for valid inference")
reln1n0 = c(length(df$kcal[df$agegrp == 1])/length(df$kcal[df$agegrp == 0]),
length(df$kcal[df$female == 1])/length(df$kcal[df$female == 0]),
length(df$alcoh[df$agegrp == 1])/length(df$alcoh[df$agegrp == 0]),
length(df$alcoh[df$cursmk == 1])/length(df$alcoh[df$cursmk == 0]),
length(df$sysbp[df$agegrp == 1])/length(df$sysbp[df$agegrp == 0]),
length(df$sysbp[df$female == 1])/length(df$sysbp[df$female == 0])); reln1n0
(c) systolic blood pressure outcome –
tab3$'Minimum Sample Size'[5]
tab3$'Minimum Sample Size'[6]
round(tab3$'Relative Variance'[5], digits = 2)
round(tab3$'Relative Variance'[6], digits = 2)
gt(tab3, caption = "Table 1: Approximate minimal sample sizes for valid inference")
gt(tab3, caption = "Table 1: Approximate minimal sample sizes for valid inference")
tab5 = data.frame(Outcome = c("Kcal", "Kcal", "Alcoh", "Alcoh", "Sysbp", "Sysbp"), SciQ = c(rep(c("i", "ii"), 3)))
tab5 = cbind(tab5, anss.eq)
tab5$n1n0 = reln1n0
tab5$s1s0 = rels1s0
names(tab5) <- c("Outcome", "Scientific Question", "Minimum Sample Size", "Nominal Coverage", "Mean Bias", "Relative N", "Relative Variance")
gt(tab5, caption = "Table 2: Approximate minimal sample sizes for valid inference (Equal Variance Assumed)")
gt(tab5, caption = "Table 2: Approximate minimal sample sizes for valid inference (Equal Variance Assumed)")
gt(tab3, caption = "Table 2: Approximate minimal sample sizes for valid inference (Equal Variance Assumed)")
gt(tab3, caption = "Table 1: Approximate minimal sample sizes for valid inference (Equal Variance Assumed)")
gt(tab3, caption = "Table 1: Approximate minimal sample sizes for valid inference")
gt(tab5, caption = "Table 2: Approximate minimal sample sizes for valid inference (Equal Variance Assumed)")
knitr::opts_chunk$set(echo = TRUE)
library(rstanarm)
library(tidyverse)
path = here::here("Project 1/bayesSim.R"); path
source(path)
knitr::opts_chunk$set(echo = TRUE)
library(rstanarm)
library(tidyverse)
path = here::here("Project 1/bayesSim.R"); path
source(path)
knitr::opts_chunk$set(echo = TRUE)
library(rstanarm)
library(tidyverse)
path = here::here("Project 1/bayesSim.R"); path
source(path)
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
library(rstanarm)
library(tidyverse)
path = here::here("bayesSim.R")
source(path)
getwd()
setwd("C:/Users/dvait/Desktop/GitRepos/BayesianProjects/Project 3")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(HDInterval)
library(rstan)
library(rstanarm)
library(bayesplot)
library(ggpubr)
library(flextable)
library(ggplot2)
library(gtsummary)
library(gt)
source(here::here("bayesSim.R"))
source(here::here("..", "bayesSim.R"))
source(here::here("..", "bayesSim.R"))
source(here::here(bayesSim.R"))
source(here::here("bayesSim.R"))
source(here::here("bayesSim.R"))
here::here()
?here
here::here()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(HDInterval)
library(rstan)
library(rstanarm)
library(bayesplot)
library(ggpubr)
library(flextable)
library(ggplot2)
library(gtsummary)
library(gt)
source(here::here("bayesSim.R"))
set.seed(2648)
theme_set(bayesplot::theme_default())
## Set up dataset -------------------
data.raw = ChickWeight %>%
filter(Time %in% c(0, 21))
data = pivot_wider(data.raw, id_cols = c("Chick"), names_from = "Time", names_prefix = "Time", values_from = "weight") %>%
na.omit() %>%
mutate(Time0= as.numeric(Time0))
colnames(data) = c("Chick", "BaselineWeight", "EndWeight")
